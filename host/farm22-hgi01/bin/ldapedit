#!/bin/bash

set -euo pipefail;

declare AUTH_HOME="/hgi/home/mercury/";

printHelp() {
	cat <<-HEREDOC
	LDAPEdit: Modify LDAP group records.
	https://gitlab.internal.sanger.ac.uk/hgi/ldapedit

	Usage: $0 -g GROUP [-a USERS_TO_ADD] [-r USERS_TO_REMOVE]

	Flags:

	  -a: Comma seperated list of usernames to add to the group.
	  -g: The group to modify. If no users to add/remove are specified, the group is printed out.
	  -h: Print this help text.
	  -r: Comma seperated list of usernames to remove from the group.
	HEREDOC
}

die() {
	echo "$1" >&2;

	exit 1;
}

setArg() {
	if [ -z "${2:-}" ]; then
		die "No value for $1 specified."
	fi;

	if [ ! -z "${!1}" ]; then
		die "Cannot specify value for $1 more than once."
	fi;

	if [ -z "$(grep -v "^[A-Za-z0-9_,-]+$" <<<"$2")" ]; then
		die "Invalid value for $1";
	fi;

	: ${!1:=$2};
}

checkListContains() {
	grep -q "^$2$" <<<"$1";
}

editor() {
	if [ -z "${EDITOR_REMOVE:-}" -a -z "${EDITOR_ADD:-}" ]; then
		cat "$1";

		exit $?;
	fi;

	declare data="$(cat "$1")";
	declare members="$(echo "$data" | grep "^member: uid=[^,]*,ou=people,dc=sanger,dc=ac,dc=uk$" | sed -e 's/^member: uid=\([^,]*\),ou=people,dc=sanger,dc=ac,dc=uk/\1/')";
	declare memberUIDs="$(echo "$data" | grep "^memberUid: " | sed -e 's/^memberUid: //')";
	
	if [ "$memberUIDs" != "$members" ]; then
		die "Group has inconsistent members";
	fi;

	if [ ! -z "${EDITOR_REMOVE:-}" ]; then
		for uid in $(tr ',' ' ' <<<"$EDITOR_REMOVE"); do
			if ! checkListContains "$members" "$uid"; then
				die "UID $uid doesn't exist in group";
			fi;
		done;
	fi;

	if [ ! -z "${EDITOR_ADD:-}" ]; then
		for uid in $(tr ',' ' ' <<<"$EDITOR_ADD"); do
			if checkListContains "$members" "$uid"; then
				die "UID $uid already exists in group";
			fi;
		done;
	fi;

	if [ ! -z "${EDITOR_REMOVE:-}" ]; then
		for uid in $(tr ',' ' ' <<<"$EDITOR_REMOVE"); do
			members="$(grep -v "^$uid$" <<<"$members")";
		done;
	fi;

	if [ ! -z "${EDITOR_ADD:-}" ]; then
		for uid in $(tr ',' ' ' <<<"$EDITOR_ADD"); do
			members="$(echo -e "$members\n$uid")";
		done;
	fi;

	{
		echo "$data" | grep -v "^member: uid=[^,]*,ou=people,dc=sanger,dc=ac,dc=uk$" | grep -v "^memberUid: ";

		for uid in $members; do
			echo "member: uid=$uid,ou=people,dc=sanger,dc=ac,dc=uk"
		done;

		for uid in $members; do
			echo "memberUid: $uid";
		done;
	} > "$1";
}

base() {
	declare GROUP="";
	declare ADD="";
	declare REMOVE="";

	while [ $# -gt 0 ]; do
		case "$1" in
		"-g")
			setArg "GROUP" "$2";
			shift;;
		"-a")
			setArg "ADD" "$2";
			shift;;
		"-r")
			setArg "REMOVE" "$2";
			shift;;
		"-h")
			printHelp;
			exit 0;;
		*)
			{
				echo "Unknown Argument: $arg";
				printHelp;
			} >&2;

			exit 1;;
		esac;

		shift;
	done;

	if [ -z "$GROUP" ]; then
		die "Group not specified";
	fi;

	if [ -z "$ADD" -a -z "$REMOVE" ]; then
		ldapvi --ldapsearch "(&(objectClass=posixGroup)(cn=$GROUP))";

		exit $?;
	fi;

	if [ ! -z "$ADD" ]; then
		export EDITOR_ADD="$ADD";

		for uid in $(tr ',' ' ' <<<"$ADD"); do
			if ldapvi --out "(&(objectClass=person)(uid=$uid))" 2>&1 | grep -q "No search results"; then
				die "Unknown user: $uid";
			fi;
		done;
	fi;
		
	if [ ! -z "$REMOVE" ]; then
		export EDITOR_REMOVE="$REMOVE";
	fi;

	HOME="$AUTH_HOME" OLD_EDITOR="$EDITOR" EDITOR_MODE=1 EDITOR="$0" ldapvi "(&(objectClass=posixGroup)(cn=$GROUP))"
}

if [ -z "${EDITOR_MODE:-}" ]; then
	base "$@";
elif [ ! -z "${2:-}" ]; then
	editor "$2";
else
	"${OLD_EDITOR:-vim}" "$1";
fi;
